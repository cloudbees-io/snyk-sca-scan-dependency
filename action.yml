apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: snyk-sca-scan
inputs:
  orgname:
    description: 'snyk username'
    required: true
  token:
    description: 'snyk client secret'
    required: true
  language:
    description: 'language name'
    required: false
  gh-secret-access-token:
    description: 'GitHub Token'
    required: false
runs:
  using: composite
  steps:
    - id: run-orchestrator
      name: snyk sca
      uses: docker://public.ecr.aws/l7o7z1g8/actions/snyk-sca-actions:main-ee82730a3dc7c3feaac8078a170d3d9f1cfbe476
      shell: bash
      env:
        TOKEN_ID: ${{ inputs.gh-secret-access-token }}
        RUN_ID: ${{ cloudbees.run_id }}
        STEP_ID: ${{step.internal.id}}
        JOB_ID: ${{ job.id }}
        DNS_URL: ${{ cloudbees.api.url }}
        JWT_TOKEN: ${{ cloudbees.api.token }}
      run: |
        set -x
        echo "RUN ID: ${{ cloudbees.run_id }}"
        echo "Job ID: ${{ job.id }}"
        echo "Step ID: ${{step.internal.id}}"
        if [ ! -z "$TOKEN_ID" ]
        then
          git config --global url."https://${TOKEN_ID}@github.com".insteadOf  "https://github.com"
        fi

        # fetch checkedout repo url and branch into assetIdentifier and profileIdentifier
        assetIdentifier=$(git config --get remote.origin.url)
        currentBranch=$(git branch | grep "*")
        profileIdentifier=${currentBranch:2}

        
        CONFIG_JSON='{\"metaInfo\":{\"url\":\"NA\",\"username\":\"${{ inputs.orgname }}\",\"password\":\"NA\",\"client_secret\":\"${{ inputs.token }}\",\"toolName\":\"snyksca\"},\"orchestratorInfo\":{\"assetType\":\"CODE\",\"assetIdentifier\":\"'
        CONFIG_JSON+=${assetIdentifier}
        CONFIG_JSON+='\",\"profileIdentifier\":\"'
        CONFIG_JSON+=${profileIdentifier}
        CONFIG_JSON+='\",\"language\":\"${{ inputs.language }}\"},\"metaInformation\":{\"actor\":\"SCM-Bot\",\"commit_id\":\"${{ cloudbees.scm.sha }}\",\"tenent_info\":\"NA\",\"scanner_type\":\"SCA\"}}'

        cd /
        /bin/bash -c "java -jar ./executables/snyk-sca-analyzer.jar & while ! nc -z localhost 5001; do sleep 1; done && ./executables/orchestrator -scanConfig \"${CONFIG_JSON}\" execute-analyser && exit"




       
        
